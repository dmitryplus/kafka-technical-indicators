version: '2.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    container_name: zookeeper-terminal-helper
    healthcheck:
      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
      interval: 10s
      timeout: 1s
      retries: 30
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
    network_mode: host

  kafka1:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka1-terminal-helper
    depends_on:
      zookeeper:
        condition: service_healthy
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_CONNECT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#    ports:
#      - "9092:9092"
    network_mode: host

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka-init-topics-terminal-helper
    depends_on:
      - kafka1
    command: bash -c 'echo "Waiting for Kafka to be ready..." &&
          cub kafka-ready -b ${KAFKA_CONNECT} 1 30 &&
          kafka-topics --create --topic ${TOPIC_CONFIG} --partitions 1 --replication-factor 1 --config cleanup.policy=compact --config delete.retention.ms=10 --config min.cleanable.dirty.ratio=0.1 --config min.compaction.lag.ms=10 --config max.compaction.lag.ms=100 --if-not-exists --bootstrap-server ${KAFKA_CONNECT} &&
          exit 0'

    network_mode: host

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop-terminal-helper
    restart: "no"
#    ports:
#      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "${KAFKA_CONNECT}"
    depends_on:
      - kafka1
    network_mode: host



  config-app:
    container_name: config-container
    build:
      context: images/config
      dockerfile: ./Dockerfile
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./src/infractructure
        target: /infractructure
        read_only: true
      - type: bind
        source: ./need_tickers.txt
        target: /need_tickers.txt
        read_only: true
      - type: bind
        source: ./not_need_tickers.txt
        target: /not_need_tickers.txt
        read_only: true
    depends_on:
      - kafka1
    network_mode: host


#  candle1:
#    container_name: candle-minute
#    build:
#      context: images/get_candles
#      dockerfile: ./Dockerfile
#    extends:
#      service: common-env-container
#    environment:
#      INTERVAL: "${INTERVAL_ONE_MIN}"
#    volumes:
#      - ./need_tickers.txt:/need_tickers.txt
#      - ./not_need_tickers.txt:/not_need_tickers.txt
#    depends_on:
#      - "kafka1"
#    network_mode: host

